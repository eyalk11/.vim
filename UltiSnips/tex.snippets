global !p
texMathZones = ['texMathZone'+x for x in ['A', 'AS', 'B', 'BS', 'C', 'CS', 'D', 'DS', 'E', 'ES', 'F', 'FS', 'G', 'GS', 'H', 'HS', 'I', 'IS', 'J', 'JS', 'K', 'KS', 'L', 'LS', 'DS', 'V', 'W', 'X', 'Y', 'Z']]

texIgnoreMathZones = ['texMathText']

texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")

ignore = texIgnoreMathZoneIds[0]

def math():
	synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
	try:
		first = next(i for i in reversed(synstackids) if i in texIgnoreMathZoneIds or i in texMathZoneIds)
		return first != ignore
	except StopIteration:
		return False

def nmath():
	return not math()
endglobal

snippet template "Basic template" b
\documentclass[oneside,english]{amsart}
% \usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage[a4paper]{geometry}
\geometry{verbose,lmargin=2cm,rmargin=2cm} 
\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{1}
\usepackage{color}
\usepackage{refstyle}
\usepackage{amstext}
\usepackage{amsthm}
\usepackage[foot]{amsaddr}
\usepackage{amssymb}
\usepackage{thmtools}
\usepackage{thm-restate}
\usepackage{csquotes}
\usepackage{nicefrac}
\usepackage{enumitem}
\usepackage{pifont}
%\usepackage{tkz-graph}
\usepackage[
backend=biber,
style=alphabetic,
citestyle=alphabetic
]{biblatex}
\makeatletter
\addbibresource{/Users/eyalkarni/Dropbox/mybibilo.bib}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% LyX specific LaTeX commands.

\AtBeginDocument{\providecommand\lemref[1]{\ref{lem:#1}}}
\AtBeginDocument{\providecommand\subsecref[1]{\ref{subsec:#1}}}
\AtBeginDocument{\providecommand\defref[1]{\ref{def:#1}}}
\RS@ifundefined{subsecref}
 {\newref{subsec}{name = \RSsectxt}}
 {}
\RS@ifundefined{thmref}
 {\def\RSthmtxt{theorem~}\newref{thm}{name = \RSthmtxt}}
 {}
\RS@ifundefined{lemref}
 {\def\RSlemtxt{lemma~}\newref{lem}{name = \RSlemtxt}}
 {}

\newcommand*{\underarrow}{\def\@underarrow{\relax}\@ifstar{\@@underarrow}{\def\@underarrow{\hidewidth}\@@underarrow}}
\newcommand*{\@@underarrow}[2][]{\underset{\@underarrow\substack{\uparrow\if\relax\detokenize{#1}\relax\else\\#1\fi}\@underarrow}{#2}}

\newcommand*{\overarrow}{\def\@overarrow{\relax}\@ifstar{\@@overarrow}{\def\@overarrow{\hidewidth}\@@overarrow}}
\newcommand*{\@@overarrow}[2][]{\overset{\@overarrow\substack{\if\relax\detokenize{#1}\relax\else#1\\\fi\downarrow}\@overarrow}{#2}}
\makeatother
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Textclass specific LaTeX commands.
\numberwithin{equation}{section}
\numberwithin{figure}{section}
\theoremstyle{plain}
\newtheorem*{fac*}{\protect\factname}
\theoremstyle{remark}
\newtheorem*{rem*}{\protect\remarkname}
\theoremstyle{plain}
\newtheorem{thm}{\protect\theoremname}[section]
\theoremstyle{definition}
\newtheorem{defn}[thm]{\protect\definitionname}
\theoremstyle{plain}
\newtheorem{lem}[thm]{\protect\lemmaname}
\theoremstyle{remark}
\newtheorem{claim}[thm]{\protect\claimname}
\theoremstyle{plain}
\newtheorem{fact}[thm]{\protect\factname}
\theoremstyle{plain}
\newtheorem{cor}[thm]{\protect\corollaryname}
\theoremstyle{plain}
\newtheorem{conjecture}[thm]{\protect\conjecturename}
\theoremstyle{plain}
%\newtheorem{prop}[thm]{\protect\conjecturename}
%\theoremstyle{plain}
%\declaretheorem[name=Theorem,Refname={Theorem,Theorems}]{thm}
%\declaretheorem[name=Lemma,Refname={Lemma,Lemmas}]{lem}
%\declaretheorem[name=Corollary,Refname={Corollary,Corollaries}]{cor}
\declaretheorem[name=Proposition,Refname={Proposition,Proposition}]{prop}
%\theoremstyle{definition}\declaretheorem[name=Defintion,Refname={Definition,Definitions}]{defn}
\theoremstyle{plain}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% User specified LaTeX commands.
\usepackage{refstyle}
\usepackage{url}
\usepackage{relsize}
\newref{definition}{name=Definition~,Name=Definition~,names=Definitions~,Names=Definitions~}
\newref{defn}{name=Definition~,Name=Definition~,names=Definitions~,Names=Definitions~}
\newref{claim}{name=Claim~,Name=Claim~,names=Claims~,Names=Claims~}
\newref{theorem}{name=Theorem~,Name=Theorem~,names=Theorems~,Names=Theorems~}


\usepackage{bbm}

\makeatother

\usepackage{babel}
\providecommand{\claimname}{Claim}
\providecommand{\corollaryname}{Corollary}
\providecommand{\conjecturename}{Conjecture}
\providecommand{\factname}{Fact}
\providecommand{\lemmaname}{Lemma}
\providecommand{\remarkname}{Remark}
\providecommand{\definitionname}{Definition}
\providecommand{\theoremname}{Theorem}
%\usepackage{authblk}
\usepackage{hyperref}
\usepackage{cleveref}

\crefname{defn}{definition}{Definition}
\Crefname{defn}{Definition}{Definitions}
\crefname{claim}{claim}{claims}
\Crefname{claim}{Claim}{Claims}
\crefname{prop}{proposition}{propositions}
\Crefname{prop}{Proposition}{Propositions}
\crefname{cor}{corollary}{corollaries}
\Crefname{cor}{Corollary}{Corollaries}
\crefname{thm}{theorem}{theorems}
\Crefname{thm}{Theorem}{Theorems}

\crefname{lem}{lemma}{lemmas}
\Crefname{lem}{Lemma}{Lemmas}
\DeclareMathOperator{\Inv}{Inv}
\DeclareMathOperator{\MAKEINV}{MAKEINV}
\begin{document}
	$0
	\printbibliography
\end{document}
endsnippet


snippet thm "Theorem" b
\begin{theorem}
	${1:${VISUAL}}
\end{theorem}

endsnippet

snippet prf "Proof" bA
\begin{proof}
	${1:${VISUAL}}
\end{proof}

endsnippet


snippet cor "Corollary" bA
\begin{cor}
\label{cor:$1}
	${1:${VISUAL}}
\end{cor}

endsnippet

snippet lem "Lemma" bA
\begin{lem}
\label{lem:$1}
	${2:${VISUAL}}
\end{lem}

endsnippet

snippet prop "Proposition" bA
\begin{prop}
\label{prop:$1}
	${1:${VISUAL}}
\end{prop}
endsnippet

snippet def "Definition" bA
\begin{defn}[$1]
\label{sub:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}
	${3:${VISUAL}}
\end{defn}
endsnippet

#snippet def "Definition" bA

#\label{defn:$1}
#${1:${VISUAL}}
#\end{defn}

#endsnippet

snippet remark "Remark" bA
\begin{remark}
	${1:${VISUAL}}
\end{remark}

endsnippet

snippet example "Example" bA
\begin{example}
	${1:${VISUAL}}
\end{example}

endsnippet

snippet exe "Exercise" bA
\begin{exercise}
	${1:${VISUAL}}
\end{exercise}

endsnippet

snippet sol "Solution" bA
\begin{solution}
	${1:${VISUAL}}
\end{solution}

endsnippet

snippet que "Question" bA
\begin{question}
	${1:${VISUAL}}
\end{question}

endsnippet

snippet problem "Problem" bA
\begin{problem}
	${1:${VISUAL}}
\end{problem}

endsnippet

snippet update "Update" bA
\begin{update}
	${1:${VISUAL}}
\end{update}

endsnippet

snippet abstract "Abstract" bA
\begin{abstract}
	${1:${VISUAL}}
\end{abstract}

endsnippet
#-----------------------------------------------------------------------
# No use
snippet chap "Chapter" bA
\chapter{${1:name}}
$2
endsnippet

snippet eq "Equation" w
\begin{equation}
	$1
\end{equation}

endsnippet

snippet eq* "Equation without numbering" w
\begin{equation*}
	$1
\end{equation*}

endsnippet

snippet split "Split" w
\begin{split}
	$1
\end{split}


endsnippet

snippet desc "Description" bA
\begin{description}
	\item[$1]\hfill \\$2
	\item[$3]\hfill \\$4
\end{description}

endsnippet
#credit : https://github.com/0mco/math-tex-snippets/blob/master/tex_math.snippets 
snippet beg "begin{} / end{}" bA
\\begin{$1}
	${2:${VISUAL}}
\\end{$1}$0
endsnippet

priority 100
snippet ... "ldots" iA
\ldots
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}
	\begin{tabular}{${5:c}}
	$0${5/((?<=.)c|l|r)|./(?1: & )/g}
	\end{tabular}
\end{table}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}}
	\label{fig:${5:${3/\W+/-/g}}}
\end{figure}
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item ${1:${VISUAL}}$0
\end{itemize}
endsnippet

snippet DESC "Description" b
\begin{description}
	\item[$1] $0
\end{description}
endsnippet

snippet PAC "Package" b
\usepackage[${1:options}]{${2:package}}$0
endsnippet

snippet => "implies" Ai
\implies
endsnippet

snippet =< "implied by" Ai
\impliedby
endsnippet

context "math()"
snippet iff "iff" Ai
\iff
endsnippet

snippet mk "Math" wA
$${1:${VISUAL}}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
${1:${VISUAL}}
\]$0
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
.\end{align*}
endsnippet


context "math()"
snippet // "Fraction" iA
\\frac{${1:${VISUAL}}}{$2}$0
endsnippet

snippet ~/ "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet


snippet sympy "sympyblock " w
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '').replace('^', '**').replace('{', '(').replace('}', ')') + ')')
`
endsnippet

priority 1000
snippet math "mathematicablock" w
math $1 math$0
endsnippet

priority 10000
snippet 'math(.*)math' "math" wr
`!p
import subprocess
code = match.group(1)
code = 'ToString[' + code + ', TeXForm]'
snip.rv = subprocess.check_output(['wolframscript', '-code', code])
`
endsnippet



snippet == "equals" iA
&= $1 \\\\
endsnippet

snippet != "equals" iA
\neq
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

snippet pmat "pmat" iA
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

snippet bmat "bmat" iA
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

context "math()"
snippet () "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet {} "\{ \}" iA
\{ ${1:${VISUAL}} \} $0
endsnippet

snippet lr "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr( "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr| "left| right|" i
\left| ${1:${VISUAL}} \right| $0
endsnippet

snippet lr{ "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lrb "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lr[ "left[ right]" i
\left[ ${1:${VISUAL}} \right] $0
endsnippet

snippet lra "leftangle rightangle" iA
\left<${1:${VISUAL}} \right>$0
endsnippet

context "math()"
snippet conj "conjugate" iA
\overline{$1}$0
endsnippet

snippet sum "sum" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}}
endsnippet

snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}}
endsnippet

snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

context "math()"
snippet SQ "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet


context "math()"
snippet TD "to the ... power" iA
^{$1}$0
endsnippet

context "math()"
snippet __ "subscript" iA
_{$1}$0
endsnippet
context "math()"
snippet ooo "\infty" iA
\infty
endsnippet
context "math()"
snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet
context "math()"
snippet <= "leq" iA
\le
endsnippet
context "math()"
snippet >= "geq" iA
\ge
endsnippet

context "math()"
snippet EE "geq" iA
\exists
endsnippet

context "math()"
snippet AA "forall" iA
\forall
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet


context "math()"
snippet xii "xi" iA
x_{i}
endsnippet

context "math()"
snippet yii "yi" iA
y_{i}
endsnippet

context "math()"
snippet xjj "xj" iA
x_{j}
endsnippet

context "math()"
snippet yjj "yj" iA
y_{j}
endsnippet

context "math()"
snippet xp1 "x" iA
x_{n+1}
endsnippet

context "math()"
snippet xmm "x" iA
x_{m}
endsnippet
context "math()"
snippet R0+ "R0+" iA
\\R_0^+
endsnippet

snippet plot "Plot" w
\begin{figure}[$1]
	\centering
	\begin{tikzpicture}
		\begin{axis}[
			xmin= ${2:-10}, xmax= ${3:10},
			ymin= ${4:-10}, ymax = ${5:10},
			axis lines = middle,
		]
			\addplot[domain=$2:$3, samples=${6:100}]{$7};
		\end{axis}
	\end{tikzpicture}
	\caption{$8}
	\label{${9:$8}}
\end{figure}
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

context "math()"
snippet lll "l" iA
\ell
endsnippet

context "math()"
snippet nabl "nabla" iA
\nabla
endsnippet

context "math()"
snippet xx "cross" iA
\times
endsnippet

priority 100
context "math()"
snippet ** "cdot" iA
\cdot
endsnippet

context "math()"
snippet norm "norm" iA
\|$1\|$0
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 300
context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet


priority 100
context "math()"
snippet -> "to" iA
\to
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto
endsnippet

context "math()"
snippet invs "inverse" iA
^{-1}
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet \\\ "setminus" iA
\setminus
endsnippet
context "math()"
snippet >> ">>" iA
\gg
endsnippet
context "math()"
snippet << "<<" iA
\ll
endsnippet

context "math()"
snippet ~~ "~" iA
\sim
endsnippet

context "math()"
#snippet set "set" wA
#\\{$1\\} $0
#endsnippet

#snippet || "mid" iA
# \mid
#endsnippet


context "math()"
#snippet cc "subset" Ai
#\subset
#endsnippet
context "math()"
snippet notin "not in " iA
\not\in
endsnippet

context "math()"
#snippet inn "in " iA
#\in
#endsnippet

#snippet NN "n" iA
#\N
#endsnippet

#snippet Nn "cap" iA
#\cap
#endsnippet
context "math()"
snippet UU "cup" iA
\cup
endsnippet
context "math()"
snippet uuu "bigcup" iA
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet
context "math()"
snippet nnn "bigcap" iA
\bigcap_{${1:i \in ${2: I}}} $0
endsnippet
context "math()"
snippet OO "emptyset" iA
\O
endsnippet
context "math()"
snippet RR "real" iA
\R
endsnippet
context "math()"
snippet QQ "Q" iA
\Q
endsnippet
context "math()"
snippet ZZ "Z" iA
\Z
endsnippet
context "math()"
snippet <! "normal" iA
\triangleleft
endsnippet
context "math()"
snippet <> "hokje" iA
\diamond
endsnippet



context "math()"
snippet SI "SI" iA
\SI{$1}{$2}
endsnippet

snippet bigfun "Big function" iA
\begin{align*}
	$1: $2 &\longrightarrow $3 \\\\
	$4 &\longmapsto $1($4) = $0
.\end{align*}
endsnippet

snippet cvec "column vector" iA
\begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
endsnippet

#priority 10
#context "math()"
#snippet "bar" "bar" riA
#\overline{${1:${VISUAL}}}$0
#endsnippet

#priority 100
#context "math()"
#snippet "([a-zA-Z])bar" "bar" riA
#\overline{`!p snip.rv=match.group(1)`}
#endsnippet

#priority 10

#priority 100
#context "math()"
#snippet "([a-zA-Z])hat" "hat" riA
#\hat{`!p snip.rv=match.group(1)`}
#endsnippet

snippet letw "let omega" iA
Let $\Omega \subset \C$ be open.
endsnippet

context "math()"
snippet HH "H" iA
\mathbb{H}
endsnippet

context "math()"
snippet TT "T" iA
\mathcal{T}
endsnippet
context "math()"
snippet ZZ "Z" iA
\mathbb{Z}
endsnippet
context "math()"
snippet DD "D" iA
\mathbb{D}
endsnippet
context "math()"
snippet NL "newline" iA
\newline
endsnippet
context "math()"
snippet @f "footnote" iA
\footnote{${1:${VISUAL}}}$0
endsnippet
context "math()"
snippet case "@C" wA
\begin{cases}
	$1
\end{cases}
endsnippet

snippet @t  "text" iA
\\text{${1:${VISUAL}}}$0
endsnippet

snippet @e  "em" iA
{\em ${1:${VISUAL}}}$0
endsnippet

snippet @E  "emphasize" iA
\\textbf{${1:${VISUAL}}}$0
endsnippet
context "math()"
snippet @^  "hat" iA
\\hat{${1:${VISUAL}}}$0
endsnippet
context "math()"
snippet @_  "bar" iA
\\bar{${1:${VISUAL}}}$0
endsnippet
context "math()"
snippet @;  "dot" iA
\\dot{${1:${VISUAL}}}$0
endsnippet
context "math()"
snippet @~  "tilde" iA
\\tilde{${1:${VISUAL}}}$0
endsnippet
context "math()"
snippet @c "mathcal" iA
\mathcal{${1:${VISUAL}}}$0
endsnippet
context "math()"
snippet @b "mathbb" iA
\mathbb{${1:${VISUAL}}}$0
endsnippet

snippet @r "ref" iA
\cref{${1:${VISUAL}}}$0
endsnippet

snippet @C "cite" iA
\autocite[$0]{${1:${VISUAL}}}
endsnippet
context "math()"
snippet @B "bra" iA
\Bra{${1:${VISUAL}}}$0
endsnippet
context "math()"
snippet @K "Ket" iA
\Ket{${1:${VISUAL}}}$0
endsnippet
context "math()"
snippet @< "Subset" iA
\Subset
endsnippet
context "math()"
snippet @, "nonumber" iA
\nonumber
endsnippet
context "math()"
snippet @+ "bigcup" iA
\bigcup
endsnippet
context "math()"
snippet @* "times" iA
\times
endsnippet
context "math()"
snippet @@ "circ" iA
\circ
endsnippet

context "math()"
snippet ~a "alpha" iA
\alpha
endsnippet

context "math()"
snippet ~g "gamma" iA
\gamma
endsnippet

context "math()"
snippet ~e "epsilon" iA
\varepsilon
endsnippet

context "math()"
snippet ~h "eta" iA
\eta
endsnippet

context "math()"
snippet ~i "iota" iA
\iota
endsnippet

context "math()"
snippet ~l "lambda" iA
\lambda
endsnippet

context "math()"
snippet ~n "nu" iA
\nu
endsnippet

context "math()"
snippet ~p "pi" iA
\pi
endsnippet

context "math()"
snippet ~s "sigma" iA
\sigma
endsnippet

context "math()"
snippet ~t "tau" iA
\tau
endsnippet

context "math()"
snippet ~f "varphi" iA
\varphi
endsnippet

context "math()"
snippet ~y "psi" iA
\psi
endsnippet

context "math()"
snippet ~A "Alpha" iA
\Alpha
endsnippet

context "math()"
snippet ~G "Gamma" iA
\Gamma
endsnippet

context "math()"
snippet ~E "Epsilon" iA
\Epsilon
endsnippet

context "math()"
snippet ~H "Eta" iA
\Eta
endsnippet

context "math()"
snippet ~L "Lambda" iA
\Lambda
endsnippet

context "math()"
snippet ~N "Nu" iA
\Nu
endsnippet

context "math()"
snippet ~P "Pi" iA
\Pi
endsnippet

context "math()"
snippet ~S "Sigma" iA
\Sigma
endsnippet

context "math()"
snippet ~U "Upsilon" iA
\Upsilon
endsnippet

context "math()"
snippet ~Y "Psi" iA
\Psi
endsnippet

context "math()"
snippet ~( "subset" iA
\subset
endsnippet

context "math()"
snippet ~= "equiv" iA
\equiv
endsnippet


context "math()"
snippet ~& "wedge" iA
\wedge
endsnippet

context "math()"
snippet ~8 "infty" iA
\infty
endsnippet

context "math()"
snippet ~6 "partial" iA
\partial
endsnippet

context "math()"
snippet ~b "beta" iA
\beta
endsnippet

context "math()"
snippet ~d "delta" iA
\delta
endsnippet

context "math()"
snippet ~z "zeta" iA
\zeta
endsnippet

context "math()"
snippet ~q "theta" iA
\theta
endsnippet

context "math()"
snippet ~k "kappa" iA
\kappa
endsnippet

context "math()"
snippet ~m "mu" iA
\mu
endsnippet

context "math()"
snippet ~x "xi" iA
\xi
endsnippet

context "math()"
snippet ~r "rho" iA
\rho
endsnippet

context "math()"
snippet ~v "varsigma" iA
\varsigma
endsnippet

context "math()"
snippet ~u "upsilon" iA
\upsilon
endsnippet

context "math()"
snippet ~c "chi" iA
\chi
endsnippet

context "math()"
snippet ~w "omega" iA
\omega
endsnippet

context "math()"
snippet ~B "Beta" iA
\Beta
endsnippet

context "math()"
snippet ~D "Delta" iA
\Delta
endsnippet

context "math()"
snippet ~K "Kappa" iA
\Kappa
endsnippet

context "math()"
snippet ~M "Mu" iA
\Mu
endsnippet

context "math()"
snippet ~X "Xi" iA
\Xi
endsnippet

context "math()"
snippet ~R "Rho" iA
\Rho
endsnippet

context "math()"
snippet ~T "Tau" iA
\Tau
endsnippet

context "math()"
snippet ~C "Chi" iA
\Chi
endsnippet

context "math()"
snippet ~W "Omega" iA
\Omega
endsnippet

context "nmath()"
snippet ~a "alpha" iA
$\alpha$
endsnippet

context "nmath()"
snippet ~g "gamma" iA
$\gamma$
endsnippet

context "nmath()"
snippet ~e "varepsilon" iA
$\varepsilon$
endsnippet

context "nmath()"
snippet ~h "eta" iA
$\eta$
endsnippet

context "nmath()"
snippet ~i "iota" iA
$\iota$
endsnippet

context "nmath()"
snippet ~l "lambda" iA
$\lambda$
endsnippet

context "nmath()"
snippet ~n "nu" iA
$\nu$
endsnippet

context "nmath()"
snippet ~p "pi" iA
$\pi$
endsnippet

context "nmath()"
snippet ~s "sigma" iA
$\sigma$
endsnippet

context "nmath()"
snippet ~t "tau" iA
$\tau$
endsnippet

context "nmath()"
snippet ~f "varphi" iA
$\varphi$
endsnippet

context "nmath()"
snippet ~y "psi" iA
$\psi$
endsnippet

context "nmath()"
snippet ~A "Alpha" iA
$\Alpha$
endsnippet

context "nmath()"
snippet ~G "Gamma" iA
$\Gamma$
endsnippet

context "nmath()"
snippet ~E "Epsilon" iA
$\Epsilon$
endsnippet

context "nmath()"
snippet ~H "Eta" iA
$\Eta$
endsnippet

context "nmath()"
snippet ~L "Lambda" iA
$\Lambda$
endsnippet

context "nmath()"
snippet ~N "Nu" iA
$\Nu$
endsnippet

context "nmath()"
snippet ~P "Pi" iA
$\Pi$
endsnippet

context "nmath()"
snippet ~S "Sigma" iA
$\Sigma$
endsnippet

context "nmath()"
snippet ~U "Upsilon" iA
$\Upsilon$
endsnippet

context "nmath()"
snippet ~Y "Psi" iA
$\Psi$
endsnippet

context "nmath()"
snippet ~( "subset" iA
$\subset$
endsnippet

context "nmath()"
snippet ~= "equiv" iA
$\equiv$
endsnippet


context "nmath()"
snippet ~& "wedge" iA
$\wedge$
endsnippet

context "nmath()"
snippet ~8 "infty" iA
$\infty$
endsnippet

context "nmath()"
snippet ~6 "partial" iA
$\partial$
endsnippet

context "nmath()"
snippet ~b "beta" iA
$\beta$
endsnippet

context "nmath()"
snippet ~d "delta" iA
$\delta$
endsnippet

context "nmath()"
snippet ~z "zeta" iA
$\zeta$
endsnippet

context "nmath()"
snippet ~q "theta" iA
$\theta$
endsnippet

context "nmath()"
snippet ~k "kappa" iA
$\kappa$
endsnippet

context "nmath()"
snippet ~m "mu" iA
$\mu$
endsnippet

context "nmath()"
snippet ~x "xi" iA
$\xi$
endsnippet

context "nmath()"
snippet ~r "rho" iA
$\rho$
endsnippet

context "nmath()"
snippet ~v "varsigma" iA
$\varsigma$
endsnippet

context "nmath()"
snippet ~u "upsilon" iA
$\upsilon$
endsnippet

context "nmath()"
snippet ~c "chi" iA
$\chi$
endsnippet

context "nmath()"
snippet ~w "omega" iA
$\omega$
endsnippet

context "nmath()"
snippet ~B "Beta" iA
$\Beta$
endsnippet

context "nmath()"
snippet ~D "Delta" iA
$\Delta$
endsnippet

context "nmath()"
snippet ~K "Kappa" iA
$\Kappa$
endsnippet

context "nmath()"
snippet ~M "Mu" iA
$\Mu$
endsnippet

context "nmath()"
snippet ~X "Xi" iA
$\Xi$
endsnippet

context "nmath()"
snippet ~R "Rho" iA
$\Rho$
endsnippet

context "nmath()"
snippet ~T "Tau" iA
$\Tau$
endsnippet

context "nmath()"
snippet ~C "Chi" iA
$\Chi$
endsnippet

context "nmath()"
snippet ~W "Omega" iA
$\Omega$
endsnippet
# vim:ft=snippets
